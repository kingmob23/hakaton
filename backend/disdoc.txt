1. Общий подход к рекомендациям:
На верхнем уровне анализируется поведение пользователя, и система стремится найти баланс между исследованием новых интересов (explore) и использованием известных предпочтений (exploit).
Изначально предлагается использовать 100% explore, постепенно снижая этот процент до 50% explore / 50% exploit.
Первые 10 видео - эксплор.

user_explore_coef = 0

user_rec = user_based(user_explore_coef)

video_rec = recomend_vids(10 - user_explore_coef)

final_rec = user_rec + video_rec


2. Данные пользователя и видео:
Используются [опционально добавим потом - данные пользователя (регион, город) и] метрики видео (v_pub_datetime, v_total_comments, v_year_views, description, category_id, author_id) для более точного подбора контента.
# Explore-видео выбираются не случайно, а с учетом метрик и поведения пользователя.
# Пример соотношения внутри видео — 5 exploit к 5 explore, где exploit — это видео с наибольшим количеством просмотров, а explore — из разных кластеров по тегам.
# 3. Алгоритм выбора видео:
# Exploit-видео — самое популярное (с максимальными просмотрами).
# Explore-видео — из разных кластеров, которые создаются на основе тегов.
# Кластеры видео не являются изолированными — и у популярных видео есть кластеры.


all_clusters = []

checked_clusters = []

def recomend_vids(how_many: int):
    available_clusters = [video for video in all_clusters is video not in checked_clusters]

    vids = [cluster[0] for cluster in available_clusters[:how_many]]

    return vids

4. Учет пользовательских предпочтений:
Если видео получают позитивные оценки (лайк),то этот кластер в следующих рекомендациях учитывается как эксплойтовый.
Негативно оцененные кластеры удаляются из пула для будущих рекомендаций.
5. Построение портрета пользователя:
С ростом информации о пользователе (например, лайки, просмотры) увеличивается роль exploit-системы пользователя.
Постепенно система фокусируется больше на кластерах, которые соответствуют портрету пользователя.
6. Весовые коэффициенты:
В системе может использоваться механизм весов для разных факторов — сначала приоритет отдается видео-метрикам, затем со временем большее влияние начинают оказывать данные о поведении пользователя.
7. Итоговая цель:
Задача системы — сбалансировать отношения между разными уровнями вложенности и метриками, чтобы найти оптимальный баланс между explore и exploit, улучшая рекомендации.